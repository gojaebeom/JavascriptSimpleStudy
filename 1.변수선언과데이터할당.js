var a;
/**
 * 위의 변수 a를 선언 한것을 풀어 쓰면 `변할 수 있는 데이터를 만든다. 이 데이터의 식별자는 'a'로 한다.` 가 됩니다.ㅏ
 * 변수란 결국 변경 가능한 데이터가 담길 수 있는 공간 또는 그릇이라고 생각할 수 있습니다.
 */

 /**
  * 위의 변수 a를 선언한 것을 메모리 영역에서 어떻게 나타내는지 대략적으로 표현하도록 하겠습니다.
  */
console.table({
    '주소 1001':{'이름':'','값':''},
    '주소 1002':{'이름':'a','값':''},
    '주소 1003':{'이름':'','값':''},
    '주소 1004':{'이름':'','값':''},
    '주소 1005':{'이름':'','값':''},
});
/**
 * 🚀자바스크립트 엔진 데이터 할당과정
 * 1. 명령을 받은 컴퓨터는 메모리에서 비어있는 공간 하나를 확보( 임의의 1002 주소로 정함 )
 * 2. 이 공간의 이름(식별자)을 a라고 지정. 
 * 3. 이후에 사용자가 a에 접근하고자 하면 컴퓨터는 메모리에서 a라는 이름을 가진 주소를 검색해 해당 공간에 담긴 데이터를 반환
 * 현재는 변수를 선언만 했기때문에 undefined를 반환합니다.
 */

 a = 'hello world';
/**
 * 식별자 a에 문자열 값을 할당하였습니다. 위와같이 변수를 선언하고 나중에 값을 할당하든, 
 * var a = 'hello world'; <- 처럼 선언과 동시에 초기화하든 자바스크립트 엔진은 같은 동작을 수행합니다.
 * 메모리에서 비어이쓴ㄴ 공간을 확보하고 그 공간의 이름을 설정하는 선언 과정은 앞과 동일합니다. 
 * 그리고 이제 값 'hello world'를 할당하는 일만 남았습니다.
 * 
 * 💡 a라는 이름을 가진 주소를 검색해서 그곳에 문자열 'hello world'를 할당하면 될것 같지만 실제로 그 곳에 저장하는게 아닙니다.
 * 데이터를 저장하기 위한 별도의 메모리 공간을 다시 확보해서 문자열 'hello world'를 저장하는 것 입니다.
 */

console.log('%c 변수 영역','color:red');
console.table({
    '주소 1001':{'이름':'','값':''},
    '주소 1002':{'이름':'a','값':'@2001'},
    '주소 1003':{'이름':'','값':''},
    '주소 1004':{'이름':'','값':''},
    '주소 1005':{'이름':'','값':''},
});
console.log('%c 데이터 영역','color:blue');
console.table({
    '주소 2001':{'데이터':'hello world'},
    '주소 2002':{'데이터':''},
    '주소 2003':{'데이터':''},
    '주소 2004':{'데이터':''},
    '주소 2005':{'데이터':''},
});

/**
 * 최종적인 순서는 다음과 같습니다.
 * 1. 변수 영역에서 빈 공간@1002를 확보한다.
 * 2. 확보한 공간의 식별자를 a로 지정한다.
 * 3. 데이터 영역의 빈 공간 @2001에 문자열 'hello world'를 지정한다. 
 * 4. 변수 영역에서 a라는 식별자를 검색한다.
 * 5. 앞서 저장한 문자열의 주소 @2001을 a 공간의 값으로 대입한다.  
 */
 

